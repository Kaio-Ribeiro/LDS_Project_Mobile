{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\pedro_henrique\\\\www\\\\LDS_Project_Mobile\\\\src\\\\pages\\\\Update_Salesman\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport logoImg from \"../../assets/logo.png\";\nimport api from \"../../services/api\";\nimport styles from \"./styles\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nexport default function Update_Salesman() {\n  var _this = this;\n\n  var route = useRoute();\n  var salesmanObject = route.params.salesman;\n  var salesmanID = route.params.salesman.id;\n\n  var _useState = useState(salesmanObject.email),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(salesmanObject.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(salesmanObject.CPF),\n      _useState6 = _slicedToArray(_useState5, 2),\n      CPF = _useState6[0],\n      setCPF = _useState6[1];\n\n  var _useState7 = useState(salesmanObject.RG),\n      _useState8 = _slicedToArray(_useState7, 2),\n      RG = _useState8[0],\n      setRG = _useState8[1];\n\n  var _useState9 = useState(salesmanObject.street),\n      _useState10 = _slicedToArray(_useState9, 2),\n      street = _useState10[0],\n      setStreet = _useState10[1];\n\n  var _useState11 = useState(salesmanObject.district),\n      _useState12 = _slicedToArray(_useState11, 2),\n      district = _useState12[0],\n      setDistrict = _useState12[1];\n\n  var _useState13 = useState(salesmanObject.number),\n      _useState14 = _slicedToArray(_useState13, 2),\n      number = _useState14[0],\n      setNumber = _useState14[1];\n\n  var _useState15 = useState(salesmanObject.uf),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uf = _useState16[0],\n      setUf = _useState16[1];\n\n  var _useState17 = useState(salesmanObject.city),\n      _useState18 = _slicedToArray(_useState17, 2),\n      city = _useState18[0],\n      setCity = _useState18[1];\n\n  var _useState19 = useState(salesmanObject.sales_goal),\n      _useState20 = _slicedToArray(_useState19, 2),\n      sales_goal = _useState20[0],\n      setSales_goal = _useState20[1];\n\n  var navigation = useNavigation();\n\n  function navigateBack() {\n    navigation.goBack();\n  }\n\n  state = {\n    screenHeight: 0\n  };\n\n  onContentSizeChange = function onContentSizeChange(contentWidth, contentHeigt) {\n    _this.setChange({\n      screenHeight: contentHeigt\n    });\n  };\n\n  var scrollEnabled = this.state.screenHeight > height;\n\n  function handleUpdateSalesman() {\n    var data, adminID;\n    return _regeneratorRuntime.async(function handleUpdateSalesman$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = {\n              name: name,\n              email: email,\n              RG: RG,\n              CPF: CPF,\n              sales_goal: sales_goal,\n              city: city,\n              uf: uf,\n              district: district,\n              street: street,\n              number: number\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userID'));\n\n          case 3:\n            adminID = _context.sent;\n            _context.prev = 4;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.put(\"salesman/\" + salesmanID, data, {\n              headers: {\n                Authorization: adminID\n              }\n            }));\n\n          case 7:\n            alert(\"Dados atualizados com sucesso.\");\n            navigation.navigate('Salesman_Listing');\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](4);\n            alert(\"Falha na atualização, tente novamente.\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[4, 11]], Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS == \"android\" ? \"height\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    onContentSizeChange: this.onContentSizeChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: navigateBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, React.createElement(Feather, {\n    name: \"arrow-left\",\n    size: 28,\n    color: \"#E82041\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }))), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Editar Vendedor\"), React.createElement(Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Atualize os dados de um usu\\xE1rio vendedor.\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.formProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"INFO:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Nome\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    defaultValue: salesmanObject.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: salesmanObject.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"CPF\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(CPF) {\n      return setCPF(CPF);\n    },\n    defaultValue: salesmanObject.CPF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"RG\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(RG) {\n      return setRG(RG);\n    },\n    defaultValue: salesmanObject.RG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Meta de Vendas\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(sales_goal) {\n      return setSales_goal(sales_goal);\n    },\n    defaultValue: String(salesmanObject.sales_goal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles.formProperty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"LOCALIZA\\xC7\\xC3O:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Rua\",\n    onChangeText: function onChangeText(street) {\n      return setStreet(street);\n    },\n    defaultValue: salesmanObject.street,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"N\\xB0 da casa\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(number) {\n      return setNumber(number);\n    },\n    defaultValue: String(salesmanObject.number),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Bairro\",\n    onChangeText: function onChangeText(district) {\n      return setDistrict(district);\n    },\n    defaultValue: salesmanObject.district,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: styles.inputGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputCity,\n    placeholder: \"Cidade\",\n    onChangeText: function onChangeText(city) {\n      return setCity(city);\n    },\n    defaultValue: salesmanObject.city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputUF,\n    placeholder: \"UF\",\n    onChangeText: function onChangeText(uf) {\n      return setUf(uf);\n    },\n    defaultValue: salesmanObject.uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.action,\n    onPress: handleUpdateSalesman,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.actionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, \"Atualizar\")))));\n}","map":{"version":3,"sources":["C:/Users/pedro_henrique/www/LDS_Project_Mobile/src/pages/Update_Salesman/index.js"],"names":["React","useState","Feather","useNavigation","useRoute","AsyncStorage","logoImg","api","styles","Dimensions","get","height","Update_Salesman","route","salesmanObject","params","salesman","salesmanID","id","email","setEmail","name","setName","CPF","setCPF","RG","setRG","street","setStreet","district","setDistrict","number","setNumber","uf","setUf","city","setCity","sales_goal","setSales_goal","navigation","navigateBack","goBack","state","screenHeight","onContentSizeChange","contentWidth","contentHeigt","setChange","scrollEnabled","handleUpdateSalesman","data","getItem","adminID","put","headers","Authorization","alert","navigate","flex","Platform","OS","container","header","title","description","form","formProperty","input","String","inputGroup","inputCity","inputUF","action","actionText"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Feather } from '@expo/vector-icons'\r\nimport { useNavigation, useRoute } from '@react-navigation/native'\r\nimport AsyncStorage from  '@react-native-community/async-storage';\r\nimport { Dimensions, View, ScrollView, KeyboardAvoidingView, Image, Text, TextInput, TouchableOpacity, Platform } from 'react-native'\r\n\r\nimport logoImg from '../../assets/logo.png'\r\nimport api from '../../services/api'\r\nimport styles from './styles'\r\n\r\nconst { height } = Dimensions.get('window')\r\n\r\nexport default function Update_Salesman() {\r\n    const route = useRoute()\r\n    const salesmanObject = route.params.salesman\r\n    const salesmanID = route.params.salesman.id\r\n\r\n    const [email, setEmail] = useState(salesmanObject.email);\r\n    const [name, setName] = useState(salesmanObject.name);\r\n    const [CPF, setCPF] = useState(salesmanObject.CPF);\r\n    const [RG, setRG] = useState(salesmanObject.RG);\r\n    const [street, setStreet] = useState(salesmanObject.street);\r\n    const [district, setDistrict] = useState(salesmanObject.district);\r\n    const [number, setNumber] = useState(salesmanObject.number);\r\n    const [uf, setUf] = useState(salesmanObject.uf);\r\n    const [city, setCity] = useState(salesmanObject.city);\r\n    const [sales_goal, setSales_goal] = useState(salesmanObject.sales_goal);\r\n\r\n    const navigation = useNavigation()\r\n\r\n    function navigateBack() {\r\n        navigation.goBack()\r\n    }\r\n\r\n    state = {\r\n        screenHeight: 0\r\n    }\r\n\r\n    onContentSizeChange = (contentWidth, contentHeigt) => {\r\n        this.setChange({ screenHeight: contentHeigt })\r\n    }\r\n\r\n    const scrollEnabled = this.state.screenHeight > height\r\n\r\n    async function handleUpdateSalesman() {\r\n        const data = {name, email, RG, CPF, sales_goal, city, uf, district, street, number}\r\n        const adminID = await AsyncStorage.getItem('userID');\r\n\r\n        try {\r\n            await api.put(`salesman/${salesmanID}`, data, {\r\n                headers: {\r\n                    Authorization: adminID,\r\n                }\r\n            })\r\n\r\n            alert(\"Dados atualizados com sucesso.\")\r\n            \r\n            navigation.navigate('Salesman_Listing')\r\n\r\n        } catch (err) {\r\n            alert(\"Falha na atualização, tente novamente.\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            style={{ flex: 1 }}\r\n            behavior={Platform.OS == \"android\" ? \"height\" : null}\r\n        >\r\n            <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n            >\r\n\r\n                <View style={styles.container}\r\n                    onContentSizeChange={this.onContentSizeChange}\r\n                >\r\n                    <View style={styles.header}>\r\n                        <Image source={logoImg}/>\r\n\r\n                        <TouchableOpacity onPress={navigateBack}>\r\n                            <Feather name=\"arrow-left\" size={28} color=\"#E82041\"/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                    <Text style={styles.title}>Editar Vendedor</Text>\r\n                    <Text style={styles.description}>\r\n                        Atualize os dados de um usuário vendedor.\r\n                    </Text>\r\n\r\n                    <View style={styles.form}>\r\n\r\n                        <Text style={styles.formProperty}>INFO:</Text>\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"Nome\"\r\n                            onChangeText={name => setName(name)}\r\n                            defaultValue={salesmanObject.name}\r\n                        />\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"E-mail\"\r\n                            onChangeText={email => setEmail(email)}\r\n                            defaultValue={salesmanObject.email}\r\n                        />\r\n                                                \r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"CPF\"\r\n                            keyboardType=\"numeric\"\r\n                            onChangeText={CPF => setCPF(CPF)}\r\n                            defaultValue={salesmanObject.CPF}\r\n                        />\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"RG\"\r\n                            keyboardType=\"numeric\"\r\n                            onChangeText={RG => setRG(RG)}\r\n                            defaultValue={salesmanObject.RG}\r\n                        />\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"Meta de Vendas\"\r\n                            keyboardType=\"numeric\"\r\n                            onChangeText={sales_goal => setSales_goal(sales_goal)}\r\n                            defaultValue={String(salesmanObject.sales_goal)}\r\n                        />\r\n\r\n                        <Text style={styles.formProperty}>LOCALIZAÇÃO:</Text>\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"Rua\"\r\n                            onChangeText={street => setStreet(street)}\r\n                            defaultValue={salesmanObject.street}\r\n                        />\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"N° da casa\"\r\n                            keyboardType=\"numeric\"\r\n                            onChangeText={number => setNumber(number)}\r\n                            defaultValue={String(salesmanObject.number)}\r\n                        />\r\n\r\n                        <TextInput \r\n                            style={styles.input}\r\n                            placeholder=\"Bairro\"\r\n                            onChangeText={district => setDistrict(district)}\r\n                            defaultValue={salesmanObject.district}\r\n                        />\r\n\r\n                        <View style={styles.inputGroup}>\r\n                            <TextInput \r\n                                style={styles.inputCity}\r\n                                placeholder=\"Cidade\"\r\n                                onChangeText={city => setCity(city)}\r\n                                defaultValue={salesmanObject.city}\r\n                            />\r\n\r\n                            <TextInput \r\n                                style={styles.inputUF}\r\n                                placeholder=\"UF\"\r\n                                onChangeText={uf => setUf(uf)}\r\n                                defaultValue={salesmanObject.uf}\r\n                            />\r\n                            \r\n                        </View>\r\n\r\n                    </View>\r\n\r\n                    <TouchableOpacity \r\n                        style={styles.action}\r\n                        onPress={handleUpdateSalesman}\r\n                    >\r\n                        <Text style={styles.actionText}>Atualizar</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n\r\n            </ScrollView>\r\n\r\n        </KeyboardAvoidingView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}