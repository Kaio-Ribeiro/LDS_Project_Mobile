{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\pedro_henrique\\\\www\\\\LDS_Project_Mobile\\\\src\\\\pages\\\\Clients_Listing\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport logoImg from \"../../assets/logo.png\";\nimport api from \"../../services/api\";\nimport styles from \"./styles\";\nexport default function Clients_Listing() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clients = _useState2[0],\n      setClients = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(client) {\n    navigation.navigate('Detail_Clients', {\n      client: client\n    });\n  }\n\n  function loadClients() {\n    var response;\n    return _regeneratorRuntime.async(function loadClients$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && clients.length == total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('/client', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            setClients([].concat(_toConsumableArray(clients), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadClients();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  }, total, \" clientes\"))), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Lista de clientes!\"), React.createElement(Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Veja todos os clientes cadastrados.\"), React.createElement(FlatList, {\n    data: clients,\n    style: styles.clientList,\n    keyExtractor: function keyExtractor(client) {\n      return String(client.id);\n    },\n    onEndReached: loadClients,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var client = _ref.item;\n      return React.createElement(View, {\n        style: styles.client,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.clientProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"E-mail:\"), React.createElement(Text, {\n        style: styles.clientValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, client.email), React.createElement(Text, {\n        style: styles.clientProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, \"Nome:\"), React.createElement(Text, {\n        style: styles.clientValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, client.name), React.createElement(Text, {\n        style: styles.clientProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, \"N\\xB0 da Caixa:\"), React.createElement(Text, {\n        style: styles.clientValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, client.box_number), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(client);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/pedro_henrique/www/LDS_Project_Mobile/src/pages/Clients_Listing/index.js"],"names":["React","useState","useEffect","Feather","useNavigation","logoImg","api","styles","Clients_Listing","clients","setClients","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","client","navigate","loadClients","length","get","params","response","data","headers","container","header","headerText","headerTextBold","title","description","clientList","String","id","item","clientProperty","clientValue","email","name","box_number","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Feather } from '@expo/vector-icons'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { View, Text, Image, TouchableOpacity, FlatList } from 'react-native'\r\n\r\nimport logoImg from '../../assets/logo.png'\r\nimport api from '../../services/api'\r\nimport styles from './styles'\r\n\r\nexport default function Clients_Listing() {\r\n  const [clients, setClients] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const navigation = useNavigation()\r\n\r\n  function navigateToDetail(client) {\r\n    navigation.navigate('Detail_Clients', { client })\r\n  }\r\n\r\n  async function loadClients() {\r\n    if(loading) {\r\n      return\r\n    }\r\n\r\n    if(total > 0 && clients.length == total) {\r\n      return\r\n    } \r\n\r\n    setLoading(true)\r\n\r\n    const response = await api.get('/client', {\r\n      params: { page }\r\n    })\r\n\r\n    setClients([...clients, ...response.data])\r\n    setTotal(response.headers['x-total-count'])\r\n    setPage(page + 1)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadClients()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Image source={logoImg}/>\r\n        <Text style={styles.headerText}>\r\n            Total de <Text style={styles.headerTextBold}>{total} clientes</Text>\r\n        </Text>\r\n      </View>\r\n\r\n      <Text style={styles.title}>Lista de clientes!</Text>\r\n      <Text style={styles.description}>Veja todos os clientes cadastrados.</Text>\r\n\r\n\r\n      <FlatList\r\n        data={clients}\r\n        style={styles.clientList}\r\n        keyExtractor={client => String(client.id)}\r\n        onEndReached={loadClients}\r\n        onEndReachedThreshold={0.2}\r\n        renderItem={({ item: client }) => (\r\n          <View style={styles.client}>\r\n            <Text style={styles.clientProperty}>E-mail:</Text>\r\n            <Text style={styles.clientValue}>{client.email}</Text>\r\n\r\n            <Text style={styles.clientProperty}>Nome:</Text>\r\n            <Text style={styles.clientValue}>{client.name}</Text>\r\n\r\n            <Text style={styles.clientProperty}>N° da Caixa:</Text>\r\n            <Text style={styles.clientValue}>{client.box_number}</Text>\r\n\r\n            <TouchableOpacity \r\n              style={styles.detailsButton}\r\n              onPress={() => navigateToDetail(client)}\r\n            >\r\n              <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n              <Feather name=\"arrow-right\" size={16} color=\"#E02041\"/>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}