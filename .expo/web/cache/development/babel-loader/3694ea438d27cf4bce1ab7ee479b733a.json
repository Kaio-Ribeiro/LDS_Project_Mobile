{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\pedro_henrique\\\\www\\\\LDS_Project_Mobile\\\\src\\\\pages\\\\Salesman_Listing\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport logoImg from \"../../assets/logo.png\";\nimport api from \"../../services/api\";\nimport styles from \"./styles\";\nexport default function Salesman_Listing() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      salesman = _useState2[0],\n      setSalesman = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(salesman) {\n    navigation.navigate('Detail', {\n      salesman: salesman\n    });\n  }\n\n  function navigateToCreateSalesman() {\n    navigation.navigate('Create_Salesman');\n  }\n\n  function loadSalesman() {\n    var response;\n    return _regeneratorRuntime.async(function loadSalesman$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && salesman.length == total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('/salesman', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            setSalesman([].concat(_toConsumableArray(salesman), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadSalesman();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 22\n    }\n  }, total, \" vendedores\"))), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Lista de vendedores!\"), React.createElement(Text, {\n    style: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Veja todos os vendedores cadastrados.\"), React.createElement(View, {\n    style: styles.rightButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.newSalesman,\n    onPress: navigateToCreateSalesman,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.actionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Criar Novo\"))), React.createElement(FlatList, {\n    data: salesman,\n    style: styles.salesmanList,\n    keyExtractor: function keyExtractor(salesman) {\n      return String(salesman.id);\n    },\n    onEndReached: loadSalesman,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var salesman = _ref.item;\n      return React.createElement(View, {\n        style: styles.salesman,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.salesmanProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"E-mail:\"), React.createElement(Text, {\n        style: styles.salesmanValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, salesman.email), React.createElement(Text, {\n        style: styles.salesmanProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, \"Nome:\"), React.createElement(Text, {\n        style: styles.salesmanValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, salesman.name), React.createElement(Text, {\n        style: styles.salesmanProperty,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, \"Quantidade de Planos Vendidos:\"), React.createElement(Text, {\n        style: styles.salesmanValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, salesman.sales_amount), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(salesman);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/pedro_henrique/www/LDS_Project_Mobile/src/pages/Salesman_Listing/index.js"],"names":["React","useState","useEffect","Feather","useNavigation","logoImg","api","styles","Salesman_Listing","salesman","setSalesman","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","navigate","navigateToCreateSalesman","loadSalesman","length","get","params","response","data","headers","container","header","headerText","headerTextBold","title","description","rightButton","newSalesman","actionText","salesmanList","String","id","item","salesmanProperty","salesmanValue","email","name","sales_amount","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Feather } from '@expo/vector-icons'\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { View, Text, Image, TouchableOpacity, FlatList } from 'react-native'\r\n\r\nimport logoImg from '../../assets/logo.png'\r\nimport api from '../../services/api'\r\nimport styles from './styles'\r\n\r\nexport default function Salesman_Listing() {\r\n  const [salesman, setSalesman] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n  const [page, setPage] = useState(1)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const navigation = useNavigation()\r\n\r\n  function navigateToDetail(salesman) {\r\n    navigation.navigate('Detail', { salesman })\r\n  }\r\n\r\n  function navigateToCreateSalesman() {\r\n    navigation.navigate('Create_Salesman')\r\n  }\r\n\r\n  async function loadSalesman() {\r\n    if(loading) {\r\n      return\r\n    }\r\n\r\n    if(total > 0 && salesman.length == total) {\r\n      return\r\n    } \r\n\r\n    setLoading(true)\r\n\r\n    const response = await api.get('/salesman', {\r\n      params: { page }\r\n    })\r\n\r\n    setSalesman([...salesman, ...response.data])\r\n    setTotal(response.headers['x-total-count'])\r\n    setPage(page + 1)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadSalesman()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Image source={logoImg}/>\r\n        <Text style={styles.headerText}>\r\n            Total de <Text style={styles.headerTextBold}>{total} vendedores</Text>\r\n        </Text>\r\n      </View>\r\n\r\n      <Text style={styles.title}>Lista de vendedores!</Text>\r\n      <Text style={styles.description}>Veja todos os vendedores cadastrados.</Text>\r\n\r\n      <View style={styles.rightButton}>\r\n        <View></View>\r\n        <TouchableOpacity \r\n          style={styles.newSalesman}\r\n          onPress={navigateToCreateSalesman}\r\n        >\r\n          <Text style={styles.actionText}>Criar Novo</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={salesman}\r\n        style={styles.salesmanList}\r\n        keyExtractor={salesman => String(salesman.id)}\r\n        onEndReached={loadSalesman}\r\n        onEndReachedThreshold={0.2}\r\n        renderItem={({ item: salesman }) => (\r\n          <View style={styles.salesman}>\r\n            <Text style={styles.salesmanProperty}>E-mail:</Text>\r\n            <Text style={styles.salesmanValue}>{salesman.email}</Text>\r\n\r\n            <Text style={styles.salesmanProperty}>Nome:</Text>\r\n            <Text style={styles.salesmanValue}>{salesman.name}</Text>\r\n\r\n            <Text style={styles.salesmanProperty}>Quantidade de Planos Vendidos:</Text>\r\n            <Text style={styles.salesmanValue}>{salesman.sales_amount}</Text>\r\n\r\n            <TouchableOpacity \r\n              style={styles.detailsButton}\r\n              onPress={() => navigateToDetail(salesman)}\r\n            >\r\n              <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n              <Feather name=\"arrow-right\" size={16} color=\"#E02041\"/>\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}